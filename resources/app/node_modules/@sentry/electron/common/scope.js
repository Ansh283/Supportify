const core = require('@sentry/core');

/** Gets the merged scope data */
function getScopeData() {
    const scope = core.getIsolationScope().getScopeData();
    core.mergeScopeData(scope, core.getCurrentScope().getScopeData());
    scope.eventProcessors = [];
    return scope;
}
/** Hooks both current and isolation scope changes and passes merged scope on changes  */
function addScopeListener(callback) {
    core.getIsolationScope().addScopeListener((isolation) => {
        const merged = getScopeData();
        callback(merged, isolation);
    });
    core.getCurrentScope().addScopeListener((current) => {
        const merged = getScopeData();
        callback(merged, current);
    });
}

exports.addScopeListener = addScopeListener;
exports.getScopeData = getScopeData;//# sourceMappingURL=http://go/sourcemap/sourcemaps/7111807980fa9c93aedd455ffa44b682c0dc1350/node_modules/@sentry/electron/common/scope.js.map
